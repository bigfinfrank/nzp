//Server Permissions
sv_cheats "1";

//autocvars
cl_adsmode "0";
r_viewmodel_default_fov "90";

//Custom variables
vid_ultrawide_limiter "1";

//Cheats
cl_fullpitch "1";                                 // When set, attempts to unlimit the default view pitch. Note that some servers will screw over your angles if you use this, resulting in terrible gameplay, while some may merely clamp your angle serverside. This is also considered a cheat in quakeworld, so this will not function there. For the equivelent in quakeworld, use serverinfo minpitch+maxpitch instead, which applies to all players fairly.

//Item effects
cl_model_bobbing "1";                             // Makes rotating pickup items bob too.

//client input controls
sensitivity "3.1818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818";

//Sound controls
s_doppler "0";                                    // Enables doppler, with a multiplier for the scale.
s_bits "16";
s_mixahead "0";                                   // Specifies how many seconds to prebuffer audio. Lower values give less latency, but might result in crackling. Different hardware/drivers have different tolerances, and this setting may be ignored completely where drivers are expected to provide their own tolerances.
musicvolume "0.3";                                // Volume level for background music.
volume "0.025";                                   // Volume level for game sounds (does not affect music, voice, or cinematics).
mastervolume "1";                                 // Additional multiplier for all other sounds.
nosound "0";                                      // Disable all sound from the engine. Cannot be overriden by configs or anything if set via the -nosound commandline argument.

//Joystick variables
joystick "0";

//input controls
in_rawinput_rdp "1";                              // Activate Remote Desktop Protocol devices too.
in_rawinput_keyboard "1";                         // Enables rawinput support for keyboards in XP onwards as well as just mice.
in_rawinput "1";                                  // Enables rawinput support for mice in XP onwards. Rawinput permits independant device identification (ie: splitscreen clients can each have their own mouse)
m_accel_senscap "0";                              // Used when m_accel_style is 1. Sets an upper limit on the amplified mouse movement. Great for tuning acceleration around lower velocities while still remaining in control of fast motion such as flicking.
m_accel_offset "0";                               // Used when m_accel_style is 1. Acceleration will not be active until the mouse movement exceeds this speed (counts per millisecond). Negative values are supported, which has the effect of causing higher rates of acceleration to happen at lower velocities.
m_accel_power "0";                                // Used when m_accel_style is 1. Values 1 or below are dumb. 2 is linear and the default. 99% of accel users use this. Above 2 begins to amplify exponentially and you will get more acceleration at higher velocities. Great if you want low accel for slow movements, and high accel for fast movements. Good in combination with a sensitivity cap.
m_accel_style "1";                                // 1 = Quake Live mouse acceleration, 0 = Old style accelertion.
m_accel "0";                                      // Values >0 will amplify mouse movement proportional to velocity. Small values have great effect. A lot of good Quake Live players use around the 0.1-0.2 mark, but this depends on your mouse CPI and polling rate.

//server control variables
sv_maxdrate "3000000";                            // This cvar controls the maximum number of bytes sent to each player per second while that player is downloading. If this cvar is set to 0, there will be NO CAP for download rates (if the user's drate is empty/0 too, then expect really fast+abusive downloads that could potentially be considered denial of service attacks)
sv_maxrate "3000000";                             // This controls the maximum number of bytes any indivual player may receive (when not downloading). The individual user's rate will also be controlled by the user's rate cvar.

//Screen Options
show_speed "1";
cl_yieldcpu "0";                                  // Attempt to yield between frames. This can resolve issues with certain drivers and background software, but can mean less consistant frame times. Will reduce power consumption/heat generation so should be set on laptops or similar (over-hot/battery powered) devices.
cl_idlefps "0";                                   // This is the maximum framerate to attain while idle/paused/unfocused.
cl_maxfps_slop "0";                               // If a frame is delayed (eg because of poor system timer precision), this is how much sooner to pretend the frame happened (in milliseconds). If it is set too low then the average framerate will drop below the target, while too high may result in excessively fast frames.
cl_maxfps "0";                                    // Sets the maximum allowed framerate. If you're using vsync or want to uncap framerates entirely then you should probably set this to 0. Set cl_yieldcpu 0 if you're trying to benchmark.
show_fps "1";                                     // Displays the current framerate on-screen. 0: Off. 1: framerate average over a second. 2: Show a frametimes graph (with additional timing info). -1: Normalized graph that focuses on the variation ignoring base times.
scr_loadingscreen_aspect "0";                     // Controls the aspect of levelshot images. 0: Use source image's aspect. 1: Force 4:3 aspect (ignore image's aspect), for best q3 compat. 2: Ignore aspect considerations and just smear it over the entire screen. -1: Disable levelshot use.
scr_loadingrefresh "1";                           // Force redrawing of the loading screen, in order to display EVERY resource that is loaded
scr_consize "1";
fov "103";                                        // field of vision, 1-170 degrees, standard fov is 90, nquake defaults to 108.

//Realtime Lighting
r_shadow_shadowmapping_depthbits "32";            // Shadowmap depth bits. 16, 24, or 32.

//Video config
vid_height "1440";                                // The screen height to attempt to use, in physical pixels. 0 means use desktop resolution.
vid_width "2560";                                 // The screen width to attempt to use, in physical pixels. 0 means use desktop resolution.
vid_triplebuffer "0";                             // Specifies whether the hardware is forcing tripplebuffering on us, this is the number of extra page swaps required before old data has been completely overwritten.
vid_minsize "0 0";                                // Specifies a mod's minimum virtual size.
vid_fullscreen "0";                               // Specifies whether the game should be fullscreen or not (requires vid_restart). 0: Run in a resizable window, which can be manually maximized (with borders). 1: Traditional fullscreen-exclusive video mode with mode switching and everything. 2: Simply maximize the window and hide any borders without interfering with any other parts of the system.
vid_winthread "1";                                // When enabled, window messages will be handled by a separate thread. This allows the game to continue rendering when Microsoft Windows blocks while resizing, etc.
vid_vsync "0";

//GL Renderer Options
gl_texture_anisotropy "16";                       // Allows for higher quality textures on surfaces that slope away from the camera (like the floor). Set to 16 or something. Only supported with trilinear filtering.

//Graphical Nicaties
r_glsl_offsetmapping "1";                         // Enables the use of paralax mapping, adding fake depth to textures.
r_renderscale "2";                                // Provides a way to enable subsampling or super-sampling
r_keepimages "1";                                 // Retain unused images in memory for slightly faster map loading. 0: Redundant images will be purged after each map change. 1: Images will be retained until vid_reload (potentially consuming a lot of ram).

//View variables
cl_bobmodel_speed "0";
cl_bobmodel_up "0";
cl_bobmodel_side "0";
cl_bobmodel "0";                                  // Controls whether the viewmodel should bob up and down as the player runs around.
cl_bobup "0";
cl_bobcycle "0";
cl_bob "0";                                       // Controls how much the camera position should bob up down as the player runs around.

//Filesystem
fs_cache "1";                                     // 0: Do individual lookups. 1: Scan all files for accelerated lookups. This provides a performance boost on windows and avoids case sensitivity issues on linux. 2: like 1, but don't bother checking for external changes (avoiding the cost of rebuild the cache).

//client operation options
cl_threadedphysics "1";                           // When set, client input frames are generated and sent on a worker thread
drate "30000000";                                 // A rough measure of the bandwidth to try to use while downloading (in bytes per second).
rate "3000000"                                    // A rough measure of the bandwidth to try to use while playing. Too high a value may result in 'buffer bloat'.
name "Fin";

//System vars
sys_clockprecision "1";                           // Attempts to control windows' interrupt interval, in milliseconds. This can cause windows to give better clock precision and shorter waits, but also more overhead from process rescheduling.
sys_clocktype "3";                                // Controls which system clock to base timings from. 0: auto 1: timeGetTime (low precision). 2: QueryPerformanceCounter (may drift, desync between cpu cores, or run fast with longer uptimes depending on cpu(s) and windows version). 3: QueryPerformanceCounter-with-force-affinity (shouldn't drift, but may result in less cpu time available).
sys_highpriority "1";                             // Controls the process priority

//Console logging
log_dir "logs";
log_enable "1";
log_rotate_files "1";









bind caps r_showbboxes


// Finishing up:
vid_restart;
cfg_save;
